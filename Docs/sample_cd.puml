@@startuml

MonsterController -u> Monster
SpecificDecorator <- MonsterController
MonsterController -d-> MonsterAttributes
MonsterAttributes --|> Attributes
GameController *-l- MonsterController
GameController *-- Monster
UI --* GameController
SpecificDecorator --|> AttributesDecorator
AttributesDecorator --|> Attributes
AttributesDecorator *- Attributes

Attributes -r-* Monster

class Monster{
    - Attributes _attr
    + void OnAttacked(int dmg)
}

class SpecificDecorator{
    + override attribute get;
    + void TakeDamage()
}

class GameController{
    - MonsterController _mCtrl
    - UI _ui
    - Monster player
    - Monster monster

    + void RunGame()
}

class Attributes <<abstract>>{
    + int Hp
    + float Size
    + int TakeDamage(int damage)
    // etc
}

class AttributesDecorator<<abstract>>{
    - Attributes _attributes
    + int Hp => return _attributes.Hp
    + int TakeDamage(int damage)
    // etc
}

class MonsterAttributes{
    + int Hp
    + float Size
    + int TakeDamage(int damage)
    // etc
}

class MonsterController{
    - Random rand
    // Spawn monsters, buff monsters etc
    // Has sole access to applying decorators
    + Monster SpawnMonster()
    + Buff(Monster target, IDecorator dec)
}



class UI{
    + void Display(string)
    + void ClearScreen()
    + void Render(Attributes, Attributes)
}


@@enduml